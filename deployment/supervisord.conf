[unix_http_server]
file=/tmp/supervisor.sock
chmod=0700
chown=causalapp:causalapp

[supervisord]
logfile=/app/logs/supervisord.log
logfile_maxbytes=50MB
logfile_backups=10
loglevel=info
pidfile=/tmp/supervisord.pid
nodaemon=true
silent=false
minfds=1024
minprocs=200
user=causalapp

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[supervisorctl]
serverurl=unix:///tmp/supervisor.sock

# Nginx Web Server
[program:nginx]
command=/usr/sbin/nginx -g "daemon off;"
user=root
autostart=true
autorestart=true
startretries=3
startsecs=10
redirect_stderr=true
stdout_logfile=/app/logs/nginx.log
stdout_logfile_maxbytes=50MB
stdout_logfile_backups=10
priority=100

# Causal UI Gym Backend API
[program:causal-api]
command=python -m uvicorn backend.api.server:app --host 0.0.0.0 --port 8000 --workers 4 --worker-class uvicorn.workers.UvicornWorker --access-log --log-level info
directory=/app
user=causalapp
environment=PYTHONPATH="/app",ENVIRONMENT="production"
autostart=true
autorestart=true
startretries=3
startsecs=10
redirect_stderr=true
stdout_logfile=/app/logs/api.log
stdout_logfile_maxbytes=50MB
stdout_logfile_backups=10
priority=200

# Redis Cache (if enabled)
[program:redis]
command=redis-server --port 6379 --bind 127.0.0.1 --maxmemory 128mb --maxmemory-policy allkeys-lru
user=causalapp
autostart=false
autorestart=true
startretries=3
startsecs=5
redirect_stderr=true
stdout_logfile=/app/logs/redis.log
stdout_logfile_maxbytes=50MB
stdout_logfile_backups=5
priority=150

# Metrics Collector
[program:metrics-collector]
command=python -m backend.metrics.collector
directory=/app
user=causalapp
environment=PYTHONPATH="/app",ENVIRONMENT="production"
autostart=true
autorestart=true
startretries=3
startsecs=10
redirect_stderr=true
stdout_logfile=/app/logs/metrics.log
stdout_logfile_maxbytes=50MB
stdout_logfile_backups=5
priority=300

# Health Check Monitor
[program:health-monitor]
command=python -m backend.monitoring.health_monitor
directory=/app
user=causalapp
environment=PYTHONPATH="/app",ENVIRONMENT="production"
autostart=true
autorestart=true
startretries=3
startsecs=15
redirect_stderr=true
stdout_logfile=/app/logs/health.log
stdout_logfile_maxbytes=50MB
stdout_logfile_backups=5
priority=400

# Periodic Task Scheduler (Celery alternative)
[program:task-scheduler]
command=python -m backend.tasks.scheduler
directory=/app
user=causalapp
environment=PYTHONPATH="/app",ENVIRONMENT="production"
autostart=true
autorestart=true
startretries=3
startsecs=10
redirect_stderr=true
stdout_logfile=/app/logs/scheduler.log
stdout_logfile_maxbytes=50MB
stdout_logfile_backups=5
priority=250

# Log Rotation Service
[program:log-rotator]
command=python -m backend.logging.rotator
directory=/app
user=causalapp
environment=PYTHONPATH="/app",ENVIRONMENT="production"
autostart=true
autorestart=true
startretries=3
startsecs=5
redirect_stderr=true
stdout_logfile=/app/logs/log-rotator.log
stdout_logfile_maxbytes=10MB
stdout_logfile_backups=3
priority=500

# Group management for easy control
[group:web]
programs=nginx,causal-api
priority=200

[group:backend]
programs=causal-api,redis,metrics-collector
priority=300

[group:monitoring]
programs=health-monitor,metrics-collector,log-rotator
priority=400

[group:tasks]
programs=task-scheduler
priority=250